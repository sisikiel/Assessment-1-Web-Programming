// Wait for the document to be fully loaded before running the script
document.addEventListener("DOMContentLoaded", function () {
    
    // Get references to the necessary DOM elements
    const calendar = document.getElementById("calendar"); // The calendar grid
    const monthYear = document.getElementById("monthYear"); // The month and year display
    const prevMonthBtn = document.getElementById("prevMonth"); // Button for previous month
    const nextMonthBtn = document.getElementById("nextMonth"); // Button for next month

    // Initialize the current date to the current date
    let currentDate = new Date(); // Get the current date

    // Function to render the calendar based on the current date
    function renderCalendar() {
        // Get the current year and month
        const year = currentDate.getFullYear(); // Extract the year
        const month = currentDate.getMonth(); // Extract the month (0-indexed)

        // Update the display of the month and year
        const monthNames = [
            "January", "February", "March", "April", "May", "June",
            "July", "August", "September", "October", "November", "December"
        ];
        monthYear.textContent = `${monthNames[month]} ${year}`; // Display the month and year

        // Clear any previous calendar content before re-rendering
        calendar.innerHTML = ""; // Clear the calendar

        // Get the first day of the month and the total number of days in the month
        const firstDay = new Date(year, month, 1).getDay(); // Get the first day of the month (0-6, where 0 is Sunday)
        const daysInMonth = new Date(year, month + 1, 0).getDate(); // Get the total number of days in the month

        // Fill in the empty spaces for days before the first day of the month
        for (let i = 0; i < firstDay; i++) {
            let emptyDiv = document.createElement("div"); // Create a div for empty space
            emptyDiv.classList.add("day"); // Add a "day" class to the div
            emptyDiv.style.visibility = "hidden"; // Make the empty div invisible
            calendar.appendChild(emptyDiv); // Append it to the calendar
        }

        // Generate day numbers for each day in the month
        for (let day = 1; day <= daysInMonth; day++) {
            let dayDiv = document.createElement("div"); // Create a div for each day
            dayDiv.classList.add("day"); // Add a "day" class to style the day
            dayDiv.textContent = day; // Set the day number as the text content
            calendar.appendChild(dayDiv); // Append the day div to the calendar
        }
    }

    // Event listener for the "Previous Month" button
    prevMonthBtn.addEventListener("click", () => {
        currentDate.setMonth(currentDate.getMonth() - 1); // Decrease the month by 1
        renderCalendar(); // Re-render the calendar with the new month
    });

    // Event listener for the "Next Month" button
    nextMonthBtn.addEventListener("click", () => {
        currentDate.setMonth(currentDate.getMonth() + 1); // Increase the month by 1
        renderCalendar(); // Re-render the calendar with the new month
    });

    // Initial render of the calendar when the page loads
    renderCalendar();
});
